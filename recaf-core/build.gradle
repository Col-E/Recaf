import java.nio.file.Files

plugins {
    alias(libs.plugins.peterabeles.gversion)
}

apply plugin: 'java-library'
apply plugin: 'java-test-fixtures'

dependencies {
    api(libs.bundles.asm)
    api(libs.binary.resources)
    api(libs.cafedude)
    api(libs.bundles.cdi)
    api(libs.cfr)
    api(libs.dex.translator) {
        exclude group: 'com.android.tools'
    }
    api(libs.directories)
    api(libs.downgrader) {
        exclude group: 'org.ow2.asm'
        exclude group: 'org.slf4j'
        exclude group: 'com.github.RaphiMC.JavaDowngrader', module: 'runtime-dep'
    }
    api(libs.extra.collections)
    api(libs.extra.observables)
    api(libs.gson) // required by R8 (from dex-translator)
    api(libs.instrument.server)
    api(libs.jphantom)
    api(libs.llzip)
    api(libs.bundles.logging)
    api(libs.mapping.io)
    api(libs.picocli)
    api(libs.procyon)
    api(libs.jackson)
    api(libs.jlinker)
    api(libs.openrewrite)
    api(libs.regex)
    api(libs.bundles.jasm)
    api(libs.vineflower)
    api(libs.wordwrap)
}

// Force generation of gversion data class when the version information is not up-to-date
tasks.register('conditionalBuildConfigUpdate') {
    if (!isBuildConfigUpToDate()) {
        finalizedBy createVersionFile
    }
}

project.compileJava.dependsOn('conditionalBuildConfigUpdate')

gversion {
    srcDir = "src/generated/java/"
    classPackage = "software.coley.recaf"
    className = "RecafBuildConfig"
    dateFormat = "yyyy MM/dd HH:mm"
    debug = true
    language = "java"
    explicitType = false
    annotate = false
}

sourceSets {
    // Need to add the generated class to the source set
    main {
        java {
            srcDirs 'src/generated/java', 'src/main/java'
        }
    }
}

private boolean isBuildConfigUpToDate() {
    File buildConfigPath = project.file(gversion.srcDir +
            gversion.classPackage.replace('.', '/') + '/' +
            gversion.className + ".java")
    if (buildConfigPath.exists()) {
        String text = Files.readString(buildConfigPath.toPath())
        if (text.contains('VERSION = "' + project.version + '"'))
            return true
    }
    return false
}