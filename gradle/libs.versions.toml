[versions]
asm = "9.6"
atlantafx = "2.0.1"
binary-resources = "31.3.0-alpha01.8"
cafedude = "2.0.1"
cdi-api = "4.1.0.RC1"
cdi-impl = "6.0.0.Beta1"
cfr = "0.152"
dex-translator = "1.1.1"
directories = "26"
docking = "1.2.3"
downgrader = "1.1.1"
extra-collections = "1.2.3"
extra-observables = "1.3.0"
gson = "2.10.1"
ikonli = "12.3.1"
instrument-server = "1.4.0"
jackson = "2.16.1"
jakarta-annotation = "3.0.0-M1"
jasm = "29504574e2"
jlinker = "1.0.7"
jphantom = "1.4.4"
junit = "5.10.2"
llzip = "2.3.0"
logback-classic = { strictly = "1.4.11" } # newer releases break in jar releases
mapping-io = "0.5.1"
mockito = "5.11.0"
openrewrite = "8.19.0"
picocli = "4.7.5"
procyon = "0.6.0"
reactfx = { strictly = "2.0-M5" } # won't get updates, dead
regex = "0.1.15"
richtextfx = "0.11.2"
treemapfx = "1.1.0"
vineflower = "1.9.3"
wordwrap = "0.1.12"
benmanes-versions = "0.42.0"
gradle-coverage-report-aggregator = "1.3.0"
gradle-checker-processor = "2.0.2"
javafx = "0.1.0"
shadow = "8.1.1"
peterabeles-gversion = "1.10.2"

[libraries]


asm-core = { module = "org.ow2.asm:asm", version.ref = "asm" }
asm-analysis = { module = "org.ow2.asm:asm-analysis", version.ref = "asm" }
asm-commons = { module = "org.ow2.asm:asm-commons", version.ref = "asm" }
asm-tree = { module = "org.ow2.asm:asm-tree", version.ref = "asm" }
asm-util = { module = "org.ow2.asm:asm-util", version.ref = "asm" }

atlantafx = { module = "io.github.mkpaz:atlantafx-base", version.ref = "atlantafx" }

# Use our fork of Android"s release with fixes and less transitive dependencies
binary-resources = { module = "com.github.Col-E:binary-resources", version.ref = "binary-resources" }

cafedude = { module = "software.coley:cafedude-core", version.ref = "cafedude" }

cdi-api = { module = "jakarta.enterprise:jakarta.enterprise.cdi-api", version.ref = "cdi-api" }
cdi-impl = { module = "org.jboss.weld.se:weld-se-core", version.ref = "cdi-impl" }

cfr = { module = "org.benf:cfr", version.ref = "cfr" }

dex-translator = { module = "software.coley:dex-translator", version.ref = "dex-translator" }

directories = { module = "dev.dirs:directories", version.ref = "directories" }

docking = { module = "com.github.Col-E:tiwulfx-dock", version.ref = "docking" }

downgrader = { module = "com.github.RaphiMC.JavaDowngrader:core", version.ref = "downgrader" }

extra-collections = { module = "software.coley:extra-collections", version.ref = "extra-collections" }
extra-observables = { module = "software.coley:extra-observables", version.ref = "extra-observables" }

gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

ikonli-javafx = { module = "org.kordamp.ikonli:ikonli-javafx", version.ref = "ikonli" }
ikonli-pack = { module = "org.kordamp.ikonli:ikonli-carbonicons-pack", version.ref = "ikonli" }

instrument-server = { module = "software.coley:instrumentation-server", version.ref = "instrument-server" }

jackson = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-xml", version.ref = "jackson" }

jakarta-annotation = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakarta-annotation" }

jasm-composistion-jvm = { module = "com.github.jumanji144.Jasm:jasm-composition-jvm", version.ref = "jasm" }
jasm-core = { module = "com.github.jumanji144.Jasm:jasm-core", version.ref = "jasm" }

jlinker = { module = "com.github.xxDark:jlinker", version.ref = "jlinker" }

jphantom = { module = "com.github.Col-E:jphantom", version.ref = "jphantom" }

junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }

llzip = { module = "software.coley:lljzip", version.ref = "llzip" }

logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback-classic" }

mapping-io = { module = "net.fabricmc:mapping-io", version.ref = "mapping-io" }

mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }

openrewrite = { module = "org.openrewrite:rewrite-java-17", version.ref = "openrewrite" }

picocli = { module = "info.picocli:picocli", version.ref = "picocli" }

procyon = { module = "org.bitbucket.mstrobel:procyon-compilertools", version.ref = "procyon" }

reactfx = { module = "org.reactfx:reactfx", version.ref = "reactfx" }

regex = { module = "com.github.tommyettinger:regexodus", version.ref = "regex" }

richtextfx = { module = "org.fxmisc.richtext:richtextfx", version.ref = "richtextfx" }

treemapfx = { module = "software.coley:treemap-fx", version.ref = "treemapfx" }

vineflower = { module = "org.vineflower:vineflower", version.ref = "vineflower" }

wordwrap = { module = "com.github.davidmoten:word-wrap", version.ref = "wordwrap" }

[bundles]
asm = [
    "asm-core",
    "asm-analysis",
    "asm-commons",
    "asm-tree",
    "asm-util",
]
jasm = [
    "jasm-core",
    "jasm-composistion-jvm",
]
cdi = [
    "cdi-api",
    "cdi-impl",
]
logging = [
    "logback-classic"
]
ikonli = [
    "ikonli-javafx",
    "ikonli-pack"
]

[plugins]
benmanes-versions = { id = "com.github.ben-manes.versions", version.ref = "benmanes-versions" }
gradle-coverage-report-aggregator = { id = "gov.tak.gradle.plugins.coverage-report-aggregator", version.ref = "gradle-coverage-report-aggregator" }
gradle-checker-processor = { id = "gov.tak.gradle.plugins.checker-processor", version.ref = "gradle-checker-processor" }
javafx = { id = "org.openjfx.javafxplugin", version.ref = "javafx" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
peterabeles-gversion = { id = "com.peterabeles.gversion", version.ref = "peterabeles-gversion" }